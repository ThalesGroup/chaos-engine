name: Sanity CI

on: 
  push:
  pull_request:
    types: [opened]
    

jobs:
  version:
    runs-on: [ubuntu-latest]
    steps:
      - name: Generate Version
        run: echo "$GITHUB_SHA" > version
      - name: Upload Version
        uses: actions/upload-artifact@v1
        with:
          name: variables
          path: "version"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.x
      - name: Run build
        run: mvn --batch-mode install
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Gather build artifacts
        run: mkdir artifacts; cp -r --parents $(find . | grep target) artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: "artifacts"

  av_scan:
    runs-on: [ubuntu-latest]
    needs: build
    container: 
      image: thalesgroup/clamav4pipeline:latest
      
    steps:
      - uses: actions/checkout@v1
      - name: Download build artifact
        uses: actions/download-artifact@v1
        with:
          name: build
      - name: AV Scan
        run: scan.sh -d . -l av.log
      - run: chmod a+r av.log
      - name: Upload AV scan artefacts
        uses: actions/upload-artifact@v1
        with:
          name: av_scan
          path: "av.log"

  hadolint:
    runs-on: [ubuntu-latest]
    container:
      image: hadolint/hadolint:latest-debian
    steps:
      - uses: actions/checkout@v1
      - name: Hadolint Scan
        run: hadolint Dockerfile

  documentation:
    runs-on: [ubuntu-latest]
    container:
      image: python:3-alpine
    steps:
      - uses: actions/checkout@v1
      - name: Download build artifact
        uses: actions/download-artifact@v1
        with:
          name: variables
      - name: Extract Version
        run: mv variables/version version
      - name: Prepare Build Environment
        run: ./ci/docs/mkdocs_pre_build.sh
      - name: Build Documentation
        run: ./ci/docs/mkdocs_build.sh public documentation
      - name: Upload Documentation
        uses: actions/upload-artifact@v1
        with:
          name: documentation
          path: "documentation"